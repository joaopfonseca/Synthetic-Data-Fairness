Metric,overall,gender_priv,gender_priv_correct,gender_priv_incorrect,gender_dis,gender_dis_correct,gender_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.06294893554612446,0.06365196609571004,0.06388675905448726,0.06302542914094673,0.06257589892797698,0.06280484132827158,0.06195371093712666,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Overall_Uncertainty,0.8293428258849341,0.8346337942282931,0.8121154777296955,0.8947231492025775,0.8265353732945806,0.8013458237193395,0.8949920472024181,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Statistical_Bias,0.3851615244771469,0.38929347337664033,0.2939167958401994,0.6438028650139742,0.38296906179578305,0.28866035010492314,0.6392682347367394,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
IQR,0.053118237095915,0.051723800634545125,0.05223711767043334,0.05035403173615724,0.05385814215705002,0.05458568795219382,0.051880918820745026,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Mean_Prediction,0.46943955448742003,0.4634122869367777,0.4559589462022036,0.4833012709632707,0.47263769645306686,0.4694393789688948,0.4813296413571914,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Aleatoric_Uncertainty,0.8130717747776003,0.8182176025067543,0.7950276039311995,0.8800993180580223,0.8103413355743758,0.7844160226543775,0.8807975653383017,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Epistemic_Uncertainty,0.016271051107333845,0.016416191721538742,0.017087873798495967,0.014623831144555122,0.01619403772020478,0.016929801064962002,0.014194481864116426,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Label_Stability,0.872087431693989,0.8794451450189155,0.9026870846576134,0.8174248265227448,0.8681833389093342,0.8948588863463004,0.7956882255389718,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Jitter,0.11338433515482697,0.10622110130306853,0.08627564287778099,0.15944487278334618,0.11718523474963756,0.09452326468344777,0.17877280265339965,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
TPR,0.7149573905377608,0.7157232704402515,1.0,0.0,0.714544220764533,1.0,0.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
TNR,0.7443272149154502,0.7391487568478718,1.0,0.0,0.7470303563572371,1.0,0.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
PPV,0.7333835719668425,0.733877901977644,1.0,0.0,0.7331167324205152,1.0,0.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
FNR,0.2850426094622392,0.2842767295597484,0.0,1.0,0.2854557792354671,0.0,1.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
FPR,0.25567278508454977,0.2608512431521281,0.0,1.0,0.25296964364276286,0.0,1.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Accuracy,0.7297632058287796,0.7274064733081127,1.0,0.0,0.7310137169621947,1.0,0.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
F1,0.7240532698459936,0.7246869029929951,1.0,0.0,0.7237113402061855,1.0,0.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Selection-Rate,0.4834244080145719,0.48886086591004624,0.4932100548974285,0.4772552043176561,0.4805397568863611,0.4819221967963387,0.4767827529021559,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
Sample_Size,13725.0,4758.0,3461.0,1297.0,8967.0,6555.0,2412.0,TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'active': {'sdtype': 'categorical'},
                                   'age': {'sdtype': 'numerical'},
                                   'alco': {'sdtype': 'categorical'},
                                   'ap_hi': {'sdtype': 'numerical'},
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(C=0.1, max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': None, 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 0.1, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,150.65966541666666
