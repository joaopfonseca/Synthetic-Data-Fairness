Metric,overall,gender_priv,gender_priv_correct,gender_priv_incorrect,gender_dis,gender_dis_correct,gender_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.14884772739541952,0.1451979833372719,0.12540095529396478,0.18741165932955087,0.15078432628341626,0.12958343643463544,0.19924572272046084,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Overall_Uncertainty,0.4345949117420106,0.43052307942992335,0.3707142811065518,0.558054809363696,0.4367554758259753,0.37449633286889444,0.5790686065574779,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Statistical_Bias,0.329943897996357,0.33779739386296764,0.11911083667798704,0.804107965766952,0.32577673692427794,0.11802500801538955,0.8006595822645656,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
IQR,0.14791985428051002,0.14329550231189575,0.11954306884841001,0.19394338380513498,0.15037359205977474,0.1254568772042321,0.2073286918285086,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Mean_Prediction,0.5686761384335155,0.5884657419083649,0.5812781722753937,0.6037919684002633,0.5581755325080852,0.5584610452067971,0.5575229021619641,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Aleatoric_Uncertainty,0.2749873146284707,0.27694659881959416,0.23803849387008855,0.35991128080211465,0.2739476944454256,0.23459608570814905,0.3638983486422492,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Epistemic_Uncertainty,0.1596075971135399,0.1535764806103292,0.13267578723646326,0.19814352856158135,0.1628077813805497,0.1399002471607454,0.21517025791522876,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Label_Stability,0.7996065573770491,0.796469104665826,0.8376041988267984,0.7087557603686635,0.8012713282034125,0.8407181789034947,0.7111029681201905,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Jitter,0.1683934426229508,0.16965111391340898,0.1370793454769991,0.23910467412771563,0.16772610683617709,0.13494709842898364,0.24265298644192015,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
TPR,0.6243020863943579,0.5815513626834381,1.0,0.0,0.6473648495815426,1.0,0.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
TNR,0.7556005203064027,0.7804466919511167,1.0,0.0,0.7426308842938847,1.0,0.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
PPV,0.7153198653198654,0.7269392033542977,1.0,0.0,0.7098214285714286,1.0,0.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
FNR,0.3756979136056421,0.41844863731656184,0.0,1.0,0.3526351504184574,0.0,1.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
FPR,0.24439947969359735,0.21955330804888326,0.0,1.0,0.25736911570611526,0.0,1.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Accuracy,0.6904918032786885,0.6807482135350987,1.0,0.0,0.6956618713058994,1.0,0.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
F1,0.6667189706574612,0.6461681807593758,1.0,0.0,0.6771560392759967,1.0,0.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Selection-Rate,0.43278688524590164,0.4010088272383354,0.4282185859833282,0.34298880842659646,0.4496487119437939,0.45880089772362936,0.42872847196775377,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
Sample_Size,13725.0,4758.0,3239.0,1519.0,8967.0,6238.0,2729.0,CONST_TVAE|PREP|KNN,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('KNN', KNeighborsClassifier())], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 100}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'KNN': KNeighborsClassifier(), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 100}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 5, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,14.415081166666665
