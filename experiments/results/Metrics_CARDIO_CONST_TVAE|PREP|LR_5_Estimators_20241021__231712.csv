Metric,overall,gender_priv,gender_priv_correct,gender_priv_incorrect,gender_dis,gender_dis_correct,gender_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.06592096037100643,0.06732325327593881,0.06541175579516563,0.07216874317519445,0.06517688658471578,0.0635970040088125,0.06938646337053078,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Overall_Uncertainty,0.8713752168214431,0.8747024574821083,0.8552922236996563,0.9239058138459466,0.8696097421851717,0.8493295638232025,0.923646016365817,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Statistical_Bias,0.3984692681584142,0.402196007688738,0.3142683426330476,0.6250854528373381,0.3964918145300791,0.3118726371093852,0.6219585234728355,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
IQR,0.07419381376949284,0.07901028284239597,0.07757607772202603,0.0826458756140916,0.07163813630223811,0.07044590385751436,0.07481482430370885,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Mean_Prediction,0.5138290763186899,0.5151906225690698,0.5106066565618165,0.5268106017791354,0.5131066232062435,0.5116343394129219,0.5170295044209781,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Aleatoric_Uncertainty,0.8553297620097486,0.8579546423089451,0.839275665424744,0.9053043221966827,0.8539369683816036,0.8341243014100842,0.9067275644806257,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Epistemic_Uncertainty,0.016045454811694504,0.01674781517316315,0.01601655827491233,0.018601491649263946,0.01567277380356813,0.015205262413118259,0.016918451885191255,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Label_Stability,0.8309653916211294,0.8324506094997898,0.8685814771395076,0.7408618127786032,0.8301773168283707,0.8663803680981595,0.7337147527584799,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Jitter,0.14233879781420763,0.14039512400168136,0.1118991793669402,0.212630014858841,0.14337013493922157,0.11374233128834357,0.22231303637106659,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
TPR,0.6610343814281516,0.6528301886792452,1.0,0.0,0.6654603030988464,1.0,0.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
TNR,0.7852290793467264,0.7817109144542773,1.0,0.0,0.787065552133744,1.0,0.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
PPV,0.7517126148705096,0.7503614457831326,1.0,0.0,0.7524296675191816,1.0,0.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
FNR,0.33896561857184837,0.3471698113207547,0.0,1.0,0.3345396969011536,0.0,1.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
FPR,0.2147709206532736,0.2182890855457227,0.0,1.0,0.21293444786625604,0.0,1.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Accuracy,0.7236429872495447,0.7171080285834385,1.0,0.0,0.7271105163376826,1.0,0.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
F1,0.7034633726839183,0.6982062780269058,1.0,0.0,0.7062777577721762,1.0,0.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Selection-Rate,0.4360655737704918,0.4361076082387558,0.4563305978898007,0.3848439821693908,0.43604326976692315,0.4512269938650307,0.39558643236616264,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
Sample_Size,13725.0,4758.0,3412.0,1346.0,8967.0,6520.0,2447.0,CONST_TVAE|PREP|LR,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('LR', LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'LR': LogisticRegression(max_iter=10000, penalty='l1', random_state=1608637542,
                   solver='saga'), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'LR__C': 1.0, 'LR__class_weight': None, 'LR__dual': False, 'LR__fit_intercept': True, 'LR__intercept_scaling': 1, 'LR__l1_ratio': None, 'LR__max_iter': 10000, 'LR__multi_class': 'deprecated', 'LR__n_jobs': None, 'LR__penalty': 'l1', 'LR__random_state': 1608637542, 'LR__solver': 'saga', 'LR__tol': 0.0001, 'LR__verbose': 0, 'LR__warm_start': False}",42,152.77038323333332
