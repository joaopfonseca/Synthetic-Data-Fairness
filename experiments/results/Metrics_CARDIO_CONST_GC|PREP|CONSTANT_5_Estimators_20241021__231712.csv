Metric,overall,gender_priv,gender_priv_correct,gender_priv_incorrect,gender_dis,gender_dis_correct,gender_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.0031095034426691258,0.0031095034426691258,0.003109503442669126,0.0031095034426691258,0.0031095034426691258,0.003109503442669126,0.0031095034426691266,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Overall_Uncertainty,0.9998321095909569,0.9998321095909574,0.9998321095909571,0.9998321095909573,0.9998321095909569,0.9998321095909569,0.9998321095909573,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Statistical_Bias,0.49993719874205034,0.5000192379619314,0.49237214809417557,0.5076278519058245,0.4998936677274196,0.4923721480941757,0.5076278519058243,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
IQR,0.003483765198779576,0.003483765198779576,0.003483765198779576,0.003483765198779576,0.003483765198779576,0.003483765198779576,0.003483765198779576,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Mean_Prediction,0.5076278519058244,0.5076278519058245,0.5076278519058245,0.5076278519058245,0.5076278519058244,0.5076278519058244,0.5076278519058243,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Aleatoric_Uncertainty,0.9998097857679957,0.9998097857679956,0.9998097857679957,0.9998097857679955,0.9998097857679956,0.9998097857679958,0.9998097857679958,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Epistemic_Uncertainty,2.2323822961189954e-05,2.2323822961745066e-05,2.2323822961412e-05,2.2323822961745066e-05,2.2323822961300976e-05,2.2323822961078932e-05,2.2323822961412e-05,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Label_Stability,1.0,1.0,1.0,1.0,1.0,1.0,1.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Jitter,0.0,0.0,0.0,0.0,0.0,0.0,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
TPR,0.0,0.0,,0.0,0.0,,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
TNR,1.0,1.0,1.0,,1.0,1.0,,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
PPV,,,,,,,,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
FNR,1.0,1.0,,1.0,1.0,,1.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
FPR,0.0,0.0,0.0,,0.0,0.0,,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Accuracy,0.5041165755919854,0.4987389659520807,1.0,0.0,0.5069700011152002,1.0,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
F1,0.0,0.0,,0.0,0.0,,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Selection-Rate,0.0,0.0,0.0,0.0,0.0,0.0,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
Sample_Size,13725.0,4758.0,2373.0,2385.0,8967.0,4546.0,4421.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'GC__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.2338786166666666
