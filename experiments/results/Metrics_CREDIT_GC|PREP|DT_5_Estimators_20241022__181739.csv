Metric,overall,age>60_priv,age>60_priv_correct,age>60_priv_incorrect,age>60_dis,age>60_dis_correct,age>60_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.028978259354788247,0.03027517188661346,0.02614940373586263,0.07802398129112421,0.025529879522105704,0.024127874660854278,0.06718945254214802,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Overall_Uncertainty,0.3216028935378142,0.33559868612983085,0.3259406401125522,0.44737428321836475,0.2843892744753204,0.2806899373394115,0.39431243508518604,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Statistical_Bias,0.11598160561737336,0.12956258554371755,0.06342119450418572,0.8950376580877424,0.07987093806127979,0.05182215509985084,0.9133204889151686,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
IQR,0.021171923778691957,0.022552534394521026,0.01987780226612573,0.05350804860188777,0.017500997877689068,0.01673368282813364,0.04030121649305028,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Mean_Prediction,0.937026729722843,0.933259694846063,0.9365788054958143,0.8948465858160225,0.9470429542401732,0.9481778449001492,0.9133204889151686,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Aleatoric_Uncertainty,0.2981339646131205,0.3109310034983614,0.30607707107891774,0.3671070864700167,0.26410772943763505,0.261914274175959,0.32928468578457903,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Epistemic_Uncertainty,0.02346892892469371,0.024667682631469456,0.019863569033634454,0.08026719674834804,0.020281545037685367,0.018775663163452472,0.06502774930060701,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Label_Stability,0.9847457627118644,0.9835335276967929,0.9870771569745344,0.9425219941348973,0.987968992248062,0.9889102564102565,0.96,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Jitter,0.013957627118644067,0.015102040816326528,0.011807931078170531,0.0532258064516129,0.010914728682170544,0.009999999999999998,0.03809523809523809,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
TPR,0.0,0.0,,0.0,0.0,,0.0,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
TNR,0.9999092064644998,0.9998733215100076,1.0,0.0,1.0,1.0,,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
PPV,0.0,0.0,,0.0,,,,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
FNR,1.0,1.0,,1.0,1.0,,1.0,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
FPR,9.079353550027238e-05,0.0001266784899923993,0.0,1.0,0.0,0.0,,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Accuracy,0.9333050847457627,0.920466472303207,1.0,0.0,0.9674418604651163,1.0,0.0,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
F1,0.0,0.0,,0.0,0.0,,0.0,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Selection-Rate,8.474576271186441e-05,0.00011661807580174928,0.0,0.001466275659824047,0.0,0.0,0.0,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
Sample_Size,23600.0,17150.0,15786.0,1364.0,6450.0,6240.0,210.0,GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,1.6492482833333333
