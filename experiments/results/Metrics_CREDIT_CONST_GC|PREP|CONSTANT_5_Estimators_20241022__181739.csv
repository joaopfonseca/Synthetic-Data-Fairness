Metric,overall,age>60_priv,age>60_priv_correct,age>60_priv_incorrect,age>60_dis,age>60_dis_correct,age>60_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.00041459424638287673,0.00041459424638287673,0.00041459424638287673,0.00041459424638287673,0.00041459424638287673,0.00041459424638287673,0.00041459424638287673,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Overall_Uncertainty,0.3536516786202378,0.3536516786202378,0.35365167862023783,0.3536516786202379,0.3536516786202379,0.3536516786202378,0.35365167862023783,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Statistical_Bias,0.1244620505200059,0.13555925813583783,0.06674346853109792,0.9332565314689021,0.09495552174302642,0.06674346853109793,0.9332565314689022,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
IQR,0.0002780757160449898,0.0002780757160449898,0.0002780757160449898,0.0002780757160449898,0.0002780757160449898,0.0002780757160449898,0.0002780757160449898,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Mean_Prediction,0.9332565314689024,0.9332565314689023,0.9332565314689023,0.9332565314689021,0.9332565314689022,0.9332565314689022,0.9332565314689022,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Aleatoric_Uncertainty,0.35365008630073075,0.35365008630073075,0.35365008630073075,0.35365008630073064,0.35365008630073064,0.3536500863007306,0.3536500863007307,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Epistemic_Uncertainty,1.5923195070266516e-06,1.5923195070266516e-06,1.5923195070821627e-06,1.5923195072486962e-06,1.5923195072486962e-06,1.592319507193185e-06,1.592319507137674e-06,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Label_Stability,1.0,1.0,1.0,1.0,1.0,1.0,1.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Jitter,0.0,0.0,0.0,0.0,0.0,0.0,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
TPR,0.0,0.0,,0.0,0.0,,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
TNR,1.0,1.0,1.0,,1.0,1.0,,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
PPV,,,,,,,,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
FNR,1.0,1.0,,1.0,1.0,,1.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
FPR,0.0,0.0,0.0,,0.0,0.0,,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Accuracy,0.9333898305084746,0.9205830903790088,1.0,0.0,0.9674418604651163,1.0,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
F1,0.0,0.0,,0.0,0.0,,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Selection-Rate,0.0,0.0,0.0,0.0,0.0,0.0,0.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
Sample_Size,23600.0,17150.0,15788.0,1362.0,6450.0,6240.0,210.0,CONST_GC|PREP|CONSTANT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('CONSTANT', DummyClassifier(random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'CONSTANT': DummyClassifier(random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'CONSTANT__constant': None, 'CONSTANT__random_state': 1608637542, 'CONSTANT__strategy': 'prior'}",42,1.8631017166666666
