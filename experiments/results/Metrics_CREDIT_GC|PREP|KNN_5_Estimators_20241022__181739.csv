Metric,overall,age>60_priv,age>60_priv_correct,age>60_priv_incorrect,age>60_dis,age>60_dis_correct,age>60_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.11152092172506363,0.11793443806603923,0.1111247102614377,0.19360128642592628,0.09446792866339984,0.09159532982598104,0.17180425840325886,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Overall_Uncertainty,0.18372490353950396,0.19451296710569999,0.1826899094598074,0.3258858406936053,0.15504036242938593,0.15007904146997209,0.2886094318951641,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Statistical_Bias,0.11111864406779662,0.12445481049562683,0.055599339011058846,0.88954802259887,0.07565891472868216,0.044926837112075894,0.9030303030303028,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
IQR,0.0426271186440678,0.04763848396501458,0.03807042074488369,0.153954802259887,0.02930232558139535,0.025566811384466957,0.12987012987012986,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Mean_Prediction,0.9419322033898306,0.9379825072886299,0.9436761154188381,0.8747175141242938,0.9524341085271317,0.9550410033767488,0.8822510822510823,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Aleatoric_Uncertainty,0.0,0.0,0.0,0.0,0.0,0.0,0.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Epistemic_Uncertainty,0.18372490353950396,0.19451296710569999,0.1826899094598074,0.3258858406936053,0.15504036242938593,0.15007904146997209,0.2886094318951641,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Label_Stability,0.8870338983050847,0.8797434402332361,0.8888013219778822,0.7790960451977401,0.9064186046511628,0.9101463257758481,0.806060606060606,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Jitter,0.10444067796610168,0.11072886297376092,0.10358459387314098,0.19011299435028245,0.08772093023255814,0.0847403119472584,0.16796536796536796,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
TPR,0.02544529262086514,0.028634361233480177,1.0,0.0,0.004761904761904762,1.0,0.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
TNR,0.9947793717087343,0.9941094502153535,1.0,0.0,0.996474358974359,1.0,0.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
PPV,0.25806451612903225,0.29545454545454547,1.0,0.0,0.043478260869565216,1.0,0.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
FNR,0.9745547073791349,0.9713656387665198,0.0,1.0,0.9952380952380953,0.0,1.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
FPR,0.0052206282912656615,0.005890549784646567,0.0,1.0,0.0035256410256410257,0.0,1.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Accuracy,0.9302118644067796,0.9174344023323615,1.0,0.0,0.9641860465116279,1.0,0.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
F1,0.04632310364794441,0.05220883534136546,1.0,0.0,0.008583690987124463,1.0,0.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Selection-Rate,0.006567796610169491,0.007696793002915452,0.002478708529299606,0.06567796610169492,0.003565891472868217,0.00016079755587715066,0.09523809523809523,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
Sample_Size,23600.0,17150.0,15734.0,1416.0,6450.0,6219.0,231.0,GC|PREP|KNN,"{'memory': None, 'steps': [('GC', SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('KNN', KNeighborsClassifier(n_neighbors=1))], 'verbose': False, 'GC': SDVGenerator(metadata={'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1',
                       'columns': {'DebtRatio': {'sdtype': 'numerical'},
                                   'MonthlyIncome': {'sdtype': 'numerical'},
                                   'NumberOfDependents': {'sdtype': 'numerical'},
                                   'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'},
                                   'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'},
                                   'NumberOfTime60-89DaysPastDueNotWorse...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'norm'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'KNN': KNeighborsClassifier(n_neighbors=1), 'GC__constraints': None, 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'norm'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'KNN__algorithm': 'auto', 'KNN__leaf_size': 30, 'KNN__metric': 'minkowski', 'KNN__metric_params': None, 'KNN__n_jobs': None, 'KNN__n_neighbors': 1, 'KNN__p': 2, 'KNN__weights': 'uniform'}",42,1.9975326666666668
