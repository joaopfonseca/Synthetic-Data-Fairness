Metric,overall,age>60_priv,age>60_priv_correct,age>60_priv_incorrect,age>60_dis,age>60_dis_correct,age>60_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.05853722092775153,0.06494469905698445,0.060149333315756746,0.1191877557580075,0.041500282956225217,0.0392834164628483,0.10705018841678705,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Overall_Uncertainty,0.39184104634412614,0.4129324726359871,0.406350819725408,0.4873812198807791,0.33576074232778275,0.3323952538354219,0.43527393049763785,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Statistical_Bias,0.13694091886146784,0.15337625867427726,0.08933311212713663,0.8778040118281143,0.09324075176229242,0.06611800812357227,0.8952255743308948,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
IQR,0.032478820418883544,0.034644805798673024,0.03096013354816093,0.07632418889366155,0.026719649990451056,0.02504290133818349,0.07629896203546215,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Mean_Prediction,0.9140530576261394,0.9072284596961147,0.910472571325571,0.8705325035257312,0.9321990815796161,0.9337961750147362,0.8849750723771723,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Aleatoric_Uncertainty,0.33354082327481016,0.34703750476267353,0.34621976442331814,0.35628742186764295,0.2976542980783983,0.29703885320412504,0.31585221547456493,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Epistemic_Uncertainty,0.05830022306931598,0.06589496787331356,0.06013105530208984,0.13109379801313614,0.03810644424938442,0.03535640063129686,0.11942171502307292,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Label_Stability,0.961864406779661,0.9559183673469388,0.959662372278987,0.9135678391959798,0.9776744186046512,0.9794197788107069,0.9260663507109004,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Jitter,0.03525423728813559,0.04072303206997085,0.037570603541283235,0.07638190954773869,0.020713178294573642,0.019233851578778653,0.06445497630331755,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
TPR,0.00826972010178117,0.006607929515418502,1.0,0.0,0.01904761904761905,1.0,0.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
TNR,0.9979571454512439,0.997466430200152,1.0,0.0,0.999198717948718,1.0,0.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
PPV,0.22413793103448276,0.1836734693877551,1.0,0.0,0.4444444444444444,1.0,0.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
FNR,0.9917302798982188,0.9933920704845814,0.0,1.0,0.9809523809523809,0.0,1.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
FPR,0.0020428545487561284,0.002533569799847986,0.0,1.0,0.0008012820512820513,0.0,1.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Accuracy,0.9320338983050848,0.9187755102040817,1.0,0.0,0.9672868217054263,1.0,0.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
F1,0.015950920245398775,0.012756909992912827,1.0,0.0,0.0365296803652968,1.0,0.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Selection-Rate,0.0024576271186440676,0.002857142857142857,0.0005711747159992384,0.028715003589375447,0.0013953488372093023,0.0006411283859592883,0.023696682464454975,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
Sample_Size,23600.0,17150.0,15757.0,1393.0,6450.0,6239.0,211.0,CONST_GC|PREP|DT,"{'memory': None, 'steps': [('GC', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('DT', DecisionTreeClassifier(max_depth=10, random_state=1608637542))], 'verbose': False, 'GC': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>,
             model_params={'default_distribution': 'beta'},
             random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'DT': DecisionTreeClassifier(max_depth=10, random_state=1608637542), 'GC__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'GC__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'GC__model': <class 'sdv.single_table.copulas.GaussianCopulaSynthesizer'>, 'GC__model_params': {'default_distribution': 'beta'}, 'GC__n_rows': None, 'GC__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'DT__ccp_alpha': 0.0, 'DT__class_weight': None, 'DT__criterion': 'gini', 'DT__max_depth': 10, 'DT__max_features': None, 'DT__max_leaf_nodes': None, 'DT__min_impurity_decrease': 0.0, 'DT__min_samples_leaf': 1, 'DT__min_samples_split': 2, 'DT__min_weight_fraction_leaf': 0.0, 'DT__monotonic_cst': None, 'DT__random_state': 1608637542, 'DT__splitter': 'best'}",42,12.473781683333334
