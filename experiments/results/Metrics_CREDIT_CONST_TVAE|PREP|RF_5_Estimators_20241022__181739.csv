Metric,overall,age>60_priv,age>60_priv_correct,age>60_priv_incorrect,age>60_dis,age>60_dis_correct,age>60_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.04848125884864672,0.055782445104734256,0.045689850259058445,0.1681000352684928,0.02906802717548372,0.025016652071958426,0.14272552332303112,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Overall_Uncertainty,0.1924732321303542,0.22085114821212626,0.18389523923488585,0.6321228481172574,0.1170187730912238,0.10018002520336863,0.5894139165397005,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Statistical_Bias,0.09557934480484784,0.11170669117525682,0.05342340539282672,0.760324643843093,0.05269810600600848,0.026647812053297915,0.783514460679348,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
IQR,0.06488041050653796,0.07534939054758424,0.06299285482962078,0.21286172863660366,0.03704428528112025,0.03223139925108398,0.17206525012375953,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Mean_Prediction,0.9268408554667261,0.9132727557519381,0.9356963992875417,0.6637264653161108,0.9629172756386041,0.971425024253908,0.7242404361065684,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Aleatoric_Uncertainty,0.15268953106319613,0.17528337706521321,0.1458744429629961,0.5025669605393915,0.09261442115085622,0.07854637926486716,0.48728002865508985,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Epistemic_Uncertainty,0.03978370106715806,0.045567771146913044,0.038020796271889756,0.12955588757786585,0.02440435194036758,0.021633645938501478,0.1021338878846107,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Label_Stability,0.9299322033898304,0.9136559766763848,0.9375699034062023,0.6475247524752475,0.9732093023255813,0.9813102119460502,0.7459459459459458,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Jitter,0.05900847457627119,0.07260641399416909,0.05322826639552618,0.2882602545968883,0.022852713178294574,0.016249197174052665,0.20810810810810812,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
TPR,0.3142493638676845,0.33480176211453744,1.0,0.0,0.18095238095238095,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
TNR,0.974668603595424,0.9678236635419306,1.0,0.0,0.9919871794871795,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
PPV,0.4695817490494297,0.4730290456431535,1.0,0.0,0.4318181818181818,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
FNR,0.6857506361323156,0.6651982378854625,0.0,1.0,0.819047619047619,0.0,1.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
FPR,0.025331396404575993,0.03217633645806942,0.0,1.0,0.008012820512820512,0.0,1.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Accuracy,0.930677966101695,0.9175510204081633,1.0,0.0,0.9655813953488372,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
F1,0.37652439024390244,0.39208942390369733,1.0,0.0,0.2550335570469799,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Selection-Rate,0.044576271186440676,0.05620991253644315,0.028978139298423997,0.3592644978783593,0.013643410852713178,0.0061014771997430954,0.22522522522522523,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
Sample_Size,23600.0,17150.0,15736.0,1414.0,6450.0,6228.0,222.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])])), ('RF', RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'IsAbove60',
                           'constraint_parameters': {'column_names': ['age',
                                                                      'age>60']}},
                          {'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'NumberOfOpenCreditLinesAndLoans',
                                                     'low_column_name': 'NumberRealEstateLoansOrLines',
                                                     'strict_boundaries': False}},
                          {'constraint_class': 'ScalarInequality',
                           'const...
                                   'NumberOfTimes90DaysLate': {'sdtype': 'numerical'},
                                   'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'},
                                   'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'},
                                   'age': {'sdtype': 'numerical'},
                                   'age>60': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['age>60'])]), 'RF': RandomForestClassifier(max_depth=5, n_estimators=1000, random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'IsAbove60', 'constraint_parameters': {'column_names': ['age', 'age>60']}}, {'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'NumberRealEstateLoansOrLines', 'high_column_name': 'NumberOfOpenCreditLinesAndLoans', 'strict_boundaries': False}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'RevolvingUtilizationOfUnsecuredLines', 'relation': '<', 'value': 1.7}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 18}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime30-59DaysPastDueNotWorse', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'MonthlyIncome', 'relation': '<', 'value': 40000}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfOpenCreditLinesAndLoans', 'relation': '<=', 'value': 40}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTimes90DaysLate', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberRealEstateLoansOrLines', 'relation': '<', 'value': 20}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfTime60-89DaysPastDueNotWorse', 'relation': '<', 'value': 10}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'NumberOfDependents', 'relation': '<=', 'value': 10}}], 'TVAE__metadata': {'columns': {'RevolvingUtilizationOfUnsecuredLines': {'sdtype': 'numerical'}, 'age': {'sdtype': 'numerical'}, 'NumberOfTime30-59DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'DebtRatio': {'sdtype': 'numerical'}, 'MonthlyIncome': {'sdtype': 'numerical'}, 'NumberOfOpenCreditLinesAndLoans': {'sdtype': 'numerical'}, 'NumberOfTimes90DaysLate': {'sdtype': 'numerical'}, 'NumberRealEstateLoansOrLines': {'sdtype': 'numerical'}, 'NumberOfTime60-89DaysPastDueNotWorse': {'sdtype': 'numerical'}, 'NumberOfDependents': {'sdtype': 'numerical'}, 'target': {'sdtype': 'categorical'}, 'age>60': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['age>60'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'gini', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 1000, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,304.3906068333333
