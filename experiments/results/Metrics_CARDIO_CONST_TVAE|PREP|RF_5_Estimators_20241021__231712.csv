Metric,overall,gender_priv,gender_priv_correct,gender_priv_incorrect,gender_dis,gender_dis_correct,gender_dis_incorrect,Model_Name,Model_Params,Virny_Random_State,Runtime_in_Mins
Std,0.07909414013642517,0.07694269670993388,0.0746094091606795,0.08309052616553235,0.08023572236272666,0.07818168546008528,0.08589787687440675,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Overall_Uncertainty,0.9006298830726543,0.9023859307816354,0.8897501136689678,0.9356792334719265,0.8996981026556439,0.8868103346574359,0.9352245012430799,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Statistical_Bias,0.4074095386006868,0.41056056692729687,0.33149167616710024,0.6188941072114209,0.4057375643865672,0.3290463088455784,0.6171445444702311,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
IQR,0.07215127769212192,0.06904464329511278,0.06825165944780512,0.07113402548714043,0.07379969594359614,0.0728649009300164,0.07637655023322948,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Mean_Prediction,0.48204696793270685,0.47422032880134674,0.46866239967155937,0.48886455918227617,0.48619987849220403,0.48371216965374564,0.4930574922990983,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Aleatoric_Uncertainty,0.8802447888066859,0.882866583114414,0.8710815667080161,0.9139181656855877,0.8788536326434017,0.8665206717882757,0.9128506508364175,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Epistemic_Uncertainty,0.020385094265968462,0.01951934766722141,0.01866854696095177,0.021761067786338795,0.02084447001224221,0.02028966286916012,0.0223738504066624,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Label_Stability,0.8346375227686703,0.85708280790248,0.8900550884314293,0.7702062643239114,0.8227277796364447,0.8588449848024318,0.7231671554252198,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Jitter,0.1431111111111111,0.12299285414039514,0.09515801681646853,0.19633307868601987,0.15378610460577674,0.12361702127659575,0.236950146627566,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
TPR,0.7032030561269468,0.7111111111111111,1.0,0.0,0.6989368921058584,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
TNR,0.7577684636508166,0.7387273493468184,1.0,0.0,0.7677078750549934,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
PPV,0.7406375735066543,0.7322970639032815,1.0,0.0,0.7452966714905933,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
FNR,0.29679694387305317,0.28888888888888886,0.0,1.0,0.3010631078941416,0.0,1.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
FPR,0.2422315363491834,0.2612726506531816,0.0,1.0,0.2322921249450066,0.0,1.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Accuracy,0.7307103825136612,0.724884405212274,1.0,0.0,0.7338017174082748,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
F1,0.72143503165511,0.7215486066794299,1.0,0.0,0.7213727092331038,1.0,0.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Selection-Rate,0.47081967213114756,0.48675914249684743,0.49173673528559003,0.47364400305576776,0.46236199397791905,0.4696048632218845,0.4423963133640553,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
Sample_Size,13725.0,4758.0,3449.0,1309.0,8967.0,6580.0,2387.0,CONST_TVAE|PREP|RF,"{'memory': None, 'steps': [('TVAE', SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542)), ('PREP', ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])])), ('RF', RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542))], 'verbose': False, 'TVAE': SDVGenerator(constraints=[{'constraint_class': 'Inequality',
                           'constraint_parameters': {'high_column_name': 'ap_hi',
                                                     'low_column_name': 'ap_lo',
                                                     'strict_boundaries': True}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_name': 'age',
                                                     'relation': '>=',
                                                     'value': 29}},
                          {'constraint_class': 'ScalarInequality',
                           'constraint_parameters': {'column_n...
                                   'ap_lo': {'sdtype': 'numerical'},
                                   'cholesterol': {'sdtype': 'categorical'},
                                   'gender': {'sdtype': 'categorical'},
                                   'gluc': {'sdtype': 'categorical'},
                                   'height': {'sdtype': 'numerical'},
                                   'smoke': {'sdtype': 'categorical'},
                                   'target': {'sdtype': 'categorical'},
                                   'weight': {'sdtype': 'numerical'}}},
             model=<class 'sdv.single_table.ctgan.TVAESynthesizer'>,
             model_params={'epochs': 1000}, random_state=1608637542), 'PREP': ColumnTransformer(force_int_remainder_cols=False, remainder=StandardScaler(),
                  transformers=[('OHE',
                                 OneHotEncoder(handle_unknown='infrequent_if_exist',
                                               sparse_output=False),
                                 ['gender', 'cholesterol', 'gluc', 'smoke',
                                  'alco', 'active'])]), 'RF': RandomForestClassifier(criterion='entropy', max_depth=5, n_estimators=10,
                       random_state=1608637542), 'TVAE__constraints': [{'constraint_class': 'Inequality', 'constraint_parameters': {'low_column_name': 'ap_lo', 'high_column_name': 'ap_hi', 'strict_boundaries': True}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '>=', 'value': 29}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'age', 'relation': '<=', 'value': 65}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '>=', 'value': 100}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'height', 'relation': '<=', 'value': 250}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'weight', 'relation': '<=', 'value': 200}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '>=', 'value': 60}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_hi', 'relation': '<=', 'value': 300}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '>=', 'value': 30}}, {'constraint_class': 'ScalarInequality', 'constraint_parameters': {'column_name': 'ap_lo', 'relation': '<=', 'value': 150}}], 'TVAE__metadata': {'columns': {'age': {'sdtype': 'numerical'}, 'gender': {'sdtype': 'categorical'}, 'height': {'sdtype': 'numerical'}, 'weight': {'sdtype': 'numerical'}, 'ap_hi': {'sdtype': 'numerical'}, 'ap_lo': {'sdtype': 'numerical'}, 'cholesterol': {'sdtype': 'categorical'}, 'gluc': {'sdtype': 'categorical'}, 'smoke': {'sdtype': 'categorical'}, 'alco': {'sdtype': 'categorical'}, 'active': {'sdtype': 'categorical'}, 'target': {'sdtype': 'categorical'}}, 'METADATA_SPEC_VERSION': 'SINGLE_TABLE_V1'}, 'TVAE__model': <class 'sdv.single_table.ctgan.TVAESynthesizer'>, 'TVAE__model_params': {'epochs': 1000}, 'TVAE__n_rows': None, 'TVAE__random_state': 1608637542, 'PREP__force_int_remainder_cols': False, 'PREP__n_jobs': None, 'PREP__remainder__copy': True, 'PREP__remainder__with_mean': True, 'PREP__remainder__with_std': True, 'PREP__remainder': StandardScaler(), 'PREP__sparse_threshold': 0.3, 'PREP__transformer_weights': None, 'PREP__transformers': [('OHE', OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), ['gender', 'cholesterol', 'gluc', 'smoke', 'alco', 'active'])], 'PREP__verbose': False, 'PREP__verbose_feature_names_out': True, 'PREP__OHE': OneHotEncoder(handle_unknown='infrequent_if_exist', sparse_output=False), 'PREP__OHE__categories': 'auto', 'PREP__OHE__drop': None, 'PREP__OHE__dtype': <class 'numpy.float64'>, 'PREP__OHE__feature_name_combiner': 'concat', 'PREP__OHE__handle_unknown': 'infrequent_if_exist', 'PREP__OHE__max_categories': None, 'PREP__OHE__min_frequency': None, 'PREP__OHE__sparse_output': False, 'RF__bootstrap': True, 'RF__ccp_alpha': 0.0, 'RF__class_weight': None, 'RF__criterion': 'entropy', 'RF__max_depth': 5, 'RF__max_features': 'sqrt', 'RF__max_leaf_nodes': None, 'RF__max_samples': None, 'RF__min_impurity_decrease': 0.0, 'RF__min_samples_leaf': 1, 'RF__min_samples_split': 2, 'RF__min_weight_fraction_leaf': 0.0, 'RF__monotonic_cst': None, 'RF__n_estimators': 10, 'RF__n_jobs': None, 'RF__oob_score': False, 'RF__random_state': 1608637542, 'RF__verbose': 0, 'RF__warm_start': False}",42,153.04041420000001
